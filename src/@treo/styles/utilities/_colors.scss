/* ----------------------------------------------------------------------------------------------------- */
/* @Functions
/* ----------------------------------------------------------------------------------------------------- */

/*
Get color from treo color maps

@access public
@param {String} $color - Desired color
@param {String|Number} $hue - Desired hue
@param {Number} $opacity - Desired opacity
*/
@function treo-color($color, $hue: 500, $opacity: 1) {

    /* Get the color palette */
    $palette: map-get($treo-colors, $color);

    /* Make sure the palette is available */
    @if ($palette == null) {
        @error "Color '#{$color}' is not available!";
    }

    /* Get the color */
    $color: map-get($palette, $hue);

    /* Make sure the hue is available */
    @if ($color == null) {
        @error "Hue '#{$hue}' is not available!";
    }

    /* Apply the opacity if possible */
    @if (type-of($color) == color) {
        $color: rgba($color, $opacity);
    }

    /* Return the color */
    @return $color;
}

/*
Get contrast color from treo color maps

@access public
@param {String} $contrast - Desired contrast
@param {String|Number} $hue - Desired hue
@param {Number} $opacity - Desired opacity
*/
@function treo-contrast($contrast, $hue: 500, $opacity: 1) {

    /* Get the color palette */
    $palette: map-get($treo-colors, $contrast);

    /* Make sure the palette is available */
    @if ($palette == null) {
        @error "Contrast '#{$contrast}' is not available!";
    }

    /* Get the contrast */
    $contrast: map-get(map-get($palette, contrast), $hue);

    /* Make sure the hue is available */
    @if ($contrast == null) {
        @error "Hue '#{$hue}' is not available!";
    }

    /* Apply the opacity if possible */
    @if (type-of($contrast) == color) {
        $color: rgba($contrast, $opacity);
    }

    /* Return the contrast */
    @return $contrast;
}

/*
Modify the Angular Material theme object to soften foreground colors
on light themes and increase contrast on dark themes

@access private
@param {Map} $theme - Angular Material theme map
*/
@function _treo-modify-angular-material-theme-colors($theme) {

    /* Store the is-dark for convenience */
    $is-dark: map-get($theme, is-dark);

    /* Generate the modified foreground palette based on */
    /* Angular Material's mat-xxx-theme-foreground map */
    $foreground: (
        base: if($is-dark, white, black),
        divider: if($is-dark, rgba(#F3F4F6, 0.12), #E5E7EB),
        dividers: if($is-dark, rgba(#F3F4F6, 0.12), #E5E7EB),
        disabled: if($is-dark, #4B5563, #9CA3AF),
        disabled-button: if($is-dark, #1F2937, #9CA3AF),
        disabled-text: if($is-dark, #4B5563, #9CA3AF),
        elevation: black,
        hint-text: if($is-dark, #6B7280, #9CA3AF),
        secondary-text: if($is-dark, #9CA3AF, #6B7280),
        icon: if($is-dark, #F3F4F6, #6B7280),
        icons: if($is-dark, #F3F4F6, #6B7280),
        text: if($is-dark, white, #1F2937),
        slider-min: if($is-dark, white, #1F2937),
        slider-off: if($is-dark, #6B7280, #D1D5DB),
        slider-off-active: if($is-dark, #9CA3AF, #9CA3AF),
    );

    /* Generate the modified background palette based on */
    /* Angular Material's mat-xxx-theme-background map */
    $background: (
        status-bar: if($is-dark, #111827, #D1D5DB),
        app-bar: if($is-dark, #111827, white),
        background: if($is-dark, #111827, #F3F4F6),
        hover: if($is-dark, rgba(255, 255, 255, 0.05), rgba(#9CA3AF, 0.12)),
        card: if($is-dark, #1F2937, white),
        dialog: if($is-dark, #1F2937, white),
        disabled-button: if($is-dark, rgba(#111827, 0.38), rgba(#9CA3AF, 0.38)),
        raised-button: if($is-dark, #111827, white),
        focused-button: if($is-dark, #E5E7EB, #6B7280),
        selected-button: if($is-dark, rgba(255, 255, 255, 0.05), #E5E7EB),
        selected-disabled-button: if($is-dark, #1F2937, #E5E7EB),
        disabled-button-toggle: if($is-dark, #111827, #D1D5DB),
        unselected-chip: if($is-dark, #4B5563, #E5E7EB),
        disabled-list-option: if($is-dark, #E5E7EB, #D1D5DB),
        tooltip: if($is-dark, #6B7280, #1F2937),
    );

    /* Store the modified theme. */
    //
    /* Since modifications only being done on 'foreground' */
    /* and 'background' palettes, add them from above but */
    /* keep everything else original */
    $modified-theme: (
        primary: map-get($theme, primary),
        accent: map-get($theme, accent),
        warn: map-get($theme, warn),
        is-dark: map-get($theme, is-dark),
        foreground: $foreground,
        background: $background
    );

    /* Return the modified theme */
    @return $modified-theme;
}

/*
Generate an Angular Material light theme
and modify it before returning

@access public
@param {Map} $primary-palette - Desired primary palette
@param {Map} $accent-palette - Desired accent palette
@param {Map} $warn-palette - Desired warn palette
*/
@function treo-light-theme($primary-palette, $accent-palette, $warn-palette) {

    /* Generate the Angular Material theme */
    $angular-material-theme: mat-light-theme($primary-palette, $accent-palette, $warn-palette);

    /* Modify and return the theme */
    @return _treo-modify-angular-material-theme-colors($angular-material-theme);
}

/*

Generate an Angular Material dark theme
and modify it before returning

@access public
@param {Map} $primary-palette - Desired primary palette
@param {Map} $accent-palette - Desired accent palette
@param {Map} $warn-palette - Desired warn palette
*/
@function treo-dark-theme($primary-palette, $accent-palette, $warn-palette) {

    /* Generate the Angular Material theme */
    $angular-material-theme: mat-dark-theme($primary-palette, $accent-palette, $warn-palette);

    /* Modify and return the theme */
    @return _treo-modify-angular-material-theme-colors($angular-material-theme);
}

/*
Generate an Angular Material compatible palette

@access public
@param {Map} $palette - Name of the palette
@param {Map} $default - Default hue
@param {Map} $lighter - Lighter hue
@param {Map} $darker - Darker hue
@param {Map} $text - Text color
*/

@function treo-palette($palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {
    @return mat-palette(map-get($treo-colors, $palette), $default, $lighter, $darker, $text);
}
