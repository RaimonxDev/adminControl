@import 'assembly';

notifications {
    display: flex;
    align-items: center;

    .notifications-toggle {
        position: relative;

        .dot {
            position: absolute;
            right: 1px;
            top: -1px;
            width: 6px;
            height: 6px;
            border-radius: 50%;
            z-index: 5;
            pointer-events: none;
        }
    }
}

// Notifications panel
.notifications-panel {
    min-width: 360px !important;
    max-width: 360px !important;
    border-radius: 8px;
    max-height: calc(100vh - 80px);
    overflow-y: auto;
    @include asm-elevation('lg');
    @include asm-media-breakpoint('xs') {
        min-width: 0 !important;
        max-width: 384px !important;
        width: calc(100vw - 32px);
    }

    .header {
        display: flex;
        align-items: center;
        padding: 32px 24px 32px 32px;

        .header-icon {
            position: relative;
            display: flex;
            margin-right: 16px;

            .mat-icon {
                width: 40px;
                min-width: 40px;
                height: 40px;
                min-height: 40px;
                line-height: 40px !important;
                padding: 8px;
                border-radius: 10px;
            }

            .unread-count {
                position: absolute;
                display: flex;
                align-items: center;
                justify-content: center;
                right: -6px;
                top: -6px;
                min-width: 19px;
                min-height: 19px;
                padding: 2px 6px;
                border-radius: 10px;
                font-size: 10px;
                font-weight: 700;
            }
        }

        .title {
            display: flex;
            align-items: center;
            font-size: 18px;
            font-weight: 500;
        }

        .mark-all-as-read {
            margin-left: auto;
        }
    }

    .content {
        position: relative;
        display: flex;
        flex-direction: column;
        max-height: 480px;
        overflow-y: auto;
        -webkit-overflow-scrolling: touch;

        .notification {
            display: flex;
            flex: 1 0 auto;
            padding: 20px 24px 20px 32px;
            border-radius: 4px;
            cursor: pointer;
            border-bottom-width: 1px;

            &:last-child {
                border-bottom-width: 0;
            }

            @include asm-media-breakpoint('gt-xs') {

                &:hover {

                    .actions {

                        .indicator {

                            .read {
                                opacity: 1;
                            }
                        }

                        .remove {
                            opacity: 1;
                        }
                    }
                }
            }

            a {
                display: flex;
                flex: 1 1 auto;

                .icon,
                .image {
                    min-width: 32px;
                    width: 32px;
                    min-height: 32px;
                    height: 32px;
                    border-radius: 50%;
                    margin-right: 16px;
                }

                .icon {
                    padding: 6px;
                }

                .image {
                    overflow: hidden;
                    object-fit: cover;
                    object-position: center;
                }

                .notification-content {
                    display: flex;
                    flex-direction: column;
                    flex: 1 1 auto;

                    .title {
                        display: -webkit-box;
                        -webkit-line-clamp: 1;
                        -webkit-box-orient: vertical;
                        overflow: hidden;
                        font-weight: 600;
                        font-size: 15px;
                    }

                    .description {
                        display: -webkit-box;
                        -webkit-line-clamp: 2;
                        -webkit-box-orient: vertical;
                        overflow: hidden;
                    }

                    .time {
                        margin-top: 8px;
                        font-size: 12px;
                        line-height: 1;
                    }
                }

            }

            .actions {
                position: relative;
                display: flex;
                flex-direction: column;
                margin-left: 8px;

                .indicator {
                    width: 24px;
                    height: 24px;
                    min-height: 24px;
                    line-height: 24px !important;

                    .read,
                    .unread {
                        width: 8px;
                        min-width: 8px;
                        max-width: 8px;
                        height: 8px;
                        min-height: 8px;
                        max-height: 8px;
                        border-radius: 50%;
                    }

                    @include asm-media-breakpoint('gt-xs') {

                        .read {
                            opacity: 0;
                        }
                    }
                }

                .remove {
                    width: 24px;
                    height: 24px;
                    min-height: 24px;
                    line-height: 24px !important;

                    @include asm-media-breakpoint('gt-xs') {
                        opacity: 0;
                    }

                    .mat-icon {
                        @include asm-icon-size(16);
                    }
                }
            }
        }

        .empty {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 96px 24px;

            .mat-icon {
                @include asm-icon-size(64);

                + * {
                    margin-top: 16px;
                    font-size: 16px
                }
            }
        }
    }
}

// -----------------------------------------------------------------------------------------------------
// @ Theming
// -----------------------------------------------------------------------------------------------------
@include asm-theme {

    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);
    $primary: map-get($theme, primary);
    $is-dark: map-get($theme, is-dark);

    notifications {

        .notifications-toggle {

            .dot {
                background: asm-color('red', 600);
            }
        }
    }

    // Notifications panel
    .notifications-panel {

        .header {

            @if ($is-dark) {
                background: rgba(0, 0, 0, 0.05);
            } @else {
                background: asm-color('gray', 800);
                color: asm-contrast('gray', 800);
            }

            .header-icon {

                .mat-icon {
                    background: map-get($primary, default) !important;
                    color: map-get($primary, default-contrast) !important;
                }

                .unread-count {
                    background: white;
                    color: map-get($primary, default);
                }
            }

            .title {

            }

            .mark-all-as-read {
                color: asm-color('gray', 500);
            }
        }

        .content {
            background: map-get($background, card);

            .notification {

                @include asm-media-breakpoint('gt-xs') {

                    &:hover {
                        @if ($is-dark) {
                            background: rgba(0, 0, 0, 0.05) !important;
                        } @else {
                            background: asm-color('gray', 100) !important;
                        }
                    }
                }

                .icon {
                    color: map-get($primary, default);

                    @if ($is-dark) {
                        background: rgba(0, 0, 0, 0.05);
                    } @else {
                        background: map-get($primary, 100);
                    }
                }

                .notification-content {

                    .time {
                        color: map-get($foreground, secondary-text);
                    }
                }

                .actions {

                    .indicator {

                        .unread {
                            background: asm-color('red', 600);
                        }

                        .read {
                            @if ($is-dark) {
                                background: asm-color('gray', 600);
                            } @else {
                                background: asm-color('gray', 500);
                            }
                        }
                    }
                }
            }
        }
    }
}
