// -----------------------------------------------------------------------------------------------------
// @ Functions
// -----------------------------------------------------------------------------------------------------

///
/// Generate the shadow from the given elevation and color
///
/// @access private
/// @param {String} $elevation - The amount of the elevation that the element will have
/// @param {Color} $color - Color of the shadow
///
@function _get-shadow($elevation, $color) {

    $shadow-map: (
        0: 'none',
        1: '0 1px 3px 0 #{rgba($color, 0.12)}, 0 1px 2px 0 #{rgba($color, 0.06)}',
        2: '0 4px 6px -1px #{rgba($color, 0.1)}, 0 2px 4px -1px #{rgba($color, 0.06)}',
        3: '0 10px 15px -3px #{rgba($color, 0.1)}, 0 4px 6px -2px #{rgba($color, 0.05)}',
        4: '0 20px 25px -5px #{rgba($color, 0.1)}, 0 10px 10px -5px #{rgba($color, 0.04)}',
        5: '0 25px 50px -12px #{rgba($color, 0.25)}',
    );

    @return map-get($shadow-map, $elevation);
}


// -----------------------------------------------------------------------------------------------------
// @ Mixins
// -----------------------------------------------------------------------------------------------------

///
/// Adds a shadow
///
/// @access public
/// @param {String} $elevation - The amount of the elevation that the element will have
/// @param {Color} $color - Color of the shadow
/// @param {Boolean} $important - Whether to add an !important tag to the shadow rule
///
@mixin asm-shadow($elevation, $color: rgb(0, 0, 0), $important: false) {
    box-shadow: #{_get_shadow($elevation, $color)} if($important, !important, null);
}
