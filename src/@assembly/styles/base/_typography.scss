// -----------------------------------------------------------------------------------------------------
// @ General
// -----------------------------------------------------------------------------------------------------
body {
    font-family: 'Roboto', 'Helvetica Neue', 'Arial', sans-serif;
    font-size: 14px;
    line-height: 1.5 !important;
}

html, body {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
}

// Headings
h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
    margin: 1.25em 0 0.5em 0;
}

h1, .h1 {
    @extend %title-xl;
}

h2, .h2 {
    @extend %title-lg;
}

h3, .h3 {
    @extend %title-base;
}

h4, .h4 {
    @extend %title-md;
    font-weight: 500;
}

h5, .h5 {
    @extend %title-sm;
    font-weight: 500;
}

h6, .h6 {
    @extend %title-xs;
    font-weight: 500;
}

// Links
a {
    color: currentColor;
    text-decoration: none;
}

// Abbr
abbr {
    cursor: help;
    border-bottom: 1px dotted;
}

// Blockquote
blockquote {
    border-left: 3px solid;
    font-style: italic;
    margin: 1em 0;
    padding-left: 16px;

    footer {
        font-style: normal;

        &:before {
            content: '\2014 \00A0';
        }
    }

    &.reverse {
        border-left: none;
        border-right: 3px solid;
        text-align: right;
        padding-left: 0;
        padding-right: 16px;

        footer {

            &:before {
                content: '';
            }

            &:after {
                content: '\2014 \00A0';
            }
        }
    }
}

// Code
code:not([class*='language-']) {
    font-family: 'Menlo', 'Monaco', 'Consolas', 'Liberation Mono', 'Courier New', 'monospace';
    font-size: 13px;
    padding: 3px 7px;
    border-radius: 3px;
}

// Definition lists
dl {

    dt {
        font-weight: bold;
    }

    dd {
        margin: 4px 0 16px 0;
    }
}

// Fieldset
fieldset {
    margin-inline-start: 0;
    margin-inline-end: 0;
    padding-inline-start: 0;
    padding-inline-end: 0;
    padding-block-start: 0;
    padding-block-end: 0;
    width: 100%;
    border: 1px solid;
    border-radius: 4px;
    padding: 24px;

    legend {
        padding: 0 8px;
        margin-left: -8px;
    }
}

// Mark
mark {
    background: #F7F49A;
}

// Pre
pre {
    white-space: pre-wrap;
}

// -----------------------------------------------------------------------------------------------------
// @ Helpers
// -----------------------------------------------------------------------------------------------------

// Link
.link {
    cursor: pointer;

    &:focus,
    &:hover {
        text-decoration: underline;
    }
}

// Marked
.marked {
    position: relative;
    white-space: nowrap;

    &:after {
        content: '';
        position: absolute;
        top: 50%;
        right: -4px;
        bottom: 10%;
        left: -4px;
        z-index: -1;
        background: #F7F49A;
        pointer-events: none;
    }
}

// Breadcrumb
.breadcrumb {
    font-size: 12px;
    font-weight: 700;
    text-transform: uppercase;

    .path {

        &a {
            color: inherit;
        }

        &.current {

        }
    }

    .separator {
        margin: 0 6px;
    }
}

// -----------------------------------------------------------------------------------------------------
// @ Theming
// -----------------------------------------------------------------------------------------------------
@include asm-angular-material-theme {

    $foreground: map-get($theme, foreground);
    $primary: map-get($theme, primary);
    $is-dark: map-get($theme, is-dark);

    // Abbr
    abbr {
        border-bottom-color: map-get($foreground, secondary-text);
    }


    // Blockquote
    blockquote {
        border-left-color: map-get($foreground, divider);

        &.reverse {
            border-right-color: map-get($foreground, divider);
        }
    }

    // Code
    code:not([class*='language-']) {

        @if ($is-dark) {
            color: #CDD3DE;
            background: #525252;
        } @else {
            color: #748DB9;
            background: #E2E8EF;
        }
    }

    // Fieldset
    fieldset {
        border-color: map-get($foreground, divider);
    }

    // -----------------------------------------------------------------------------------------------------
    // @ Helpers
    // -----------------------------------------------------------------------------------------------------

    // Link
    .link {
        color: map-get($primary, default);
        border-bottom-color: map-get($primary, default);
    }

    // Breadcrumb
    .breadcrumb {
        color: map-get($foreground, text);

        .path {

            &.current {
                color: map-get($primary, default);
            }
        }

        .separator {
            color: map-get($foreground, secondary-text);
        }
    }
}
